+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
|   0|use 5.010;                                                                        |   0|use 5.010;                                                                        |
|   1|use strictures;                                                                   |   1|use strictures;                                                                   |
|   2|                                                                                  |   2|                                                                                  |
|   3|use Moo;                                                                          |   3|use Moo;                                                                          |
|   4|                                                                                  |   4|                                                                                  |
|   5|use Test::More;                                                                   |   5|use Test::More;                                                                   |
|   6|use AnyEvent;                                                                     |   6|use AnyEvent;                                                                     |
|   7|use curry;                                                                        |   7|use curry;                                                                        |
|    |                                                                                  *   8|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *
|    |                                                                                  *   9|use AnyEvent::Future;                                                             *
|    |                                                                                  *  10|use Future::AsyncAwait;                                                           *
|   8|                                                                                  |  11|                                                                                  |
|   9|has count => is => rw => default => 0;                                            |  12|has count => is => rw => default => 0;                                            |
*  10|has cv    => is => "rw";                                                          *    |                                                                                  |
|  11|                                                                                  |  13|                                                                                  |
*  12|__PACKAGE__->new->run;                                                            *  14|await __PACKAGE__->new->run;                                                      *
|  13|                                                                                  |  15|                                                                                  |
*  14|sub run {                                                                         *  16|async sub run {                                                                   *
|  15|    my ($self) = @_;                                                              |  17|    my ($self) = @_;                                                              |
|  16|                                                                                  |  18|                                                                                  |
|  17|    $|++;                                                                         |  19|    $|++;                                                                         |
|  18|                                                                                  |  20|                                                                                  |
|  19|    my $w = AnyEvent->timer    #                                                  |  21|    my $w = AnyEvent->timer    #                                                  |
|  20|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  |  22|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  |
|  21|                                                                                  |  23|                                                                                  |
*  22|    $self->cv( AnyEvent->condvar );                                               *  24|    await $self->do(1);                                                           *
*  23|    $self->do( 1, $self->cv->curry::send );                                       *    |                                                                                  |
*  24|    $self->cv->recv;                                                              *    |                                                                                  |
|  25|                                                                                  |  25|                                                                                  |
*  26|    $self->cv( AnyEvent->condvar );                                               *  26|    await $self->do(2);                                                           *
*  27|    $self->do( 2, $self->cv->curry::send );                                       *    |                                                                                  |
*  28|    $self->cv->recv;                                                              *    |                                                                                  |
|  29|                                                                                  |  27|                                                                                  |
|  30|    is $self->count, $_, "had $_ events tracked" for 42;                          |  28|    is $self->count, $_, "had $_ events tracked" for 42;                          |
|  31|    done_testing;                                                                 |  29|    done_testing;                                                                 |
|  32|    return;                                                                       |  30|    return;                                                                       |
|  33|}                                                                                 |  31|}                                                                                 |
|  34|                                                                                  |  32|                                                                                  |
*  35|sub do {                                                                          *  33|async sub do {                                                                    *
*  36|    my ( $self, $id, $end_cb ) = @_;                                              *  34|    my ( $self, $id ) = @_;                                                       *
*  37|    $self->log_to_db(                                                             *  35|    await $self->log_to_db("start");                                              *
*  38|        "start",                                                                  *  36|    my $name = await $self->get_object_name($id);                                 *
*  39|        $self->curry::get_object_name(                                            *  37|    eval {                                                                        *
*  40|            $id,                                                                  *  38|        await $self->delete_object($name);                                        *
*  41|            $self->curry::delete_object(                                          *  39|        await $self->log_to_db("success");                                        *
*  42|                $self->curry::log_to_db    #                                      *  40|    };                                                                            *
*  43|                  ( "success" => $self->curry::finalize($end_cb) ),               *  41|    await $self->log_to_db("failure") if $@;                                      *
*  44|                $self->curry::log_to_db    #                                      *  42|    await $self->finalize;                                                        *
*  45|                  ( "failure" => $self->curry::finalize($end_cb) ),               *    |                                                                                  |
*  46|            )                                                                     *    |                                                                                  |
*  47|        )                                                                         *    |                                                                                  |
*  48|    );                                                                            *    |                                                                                  |
|  49|    return;                                                                       |  43|    return;                                                                       |
|  50|}                                                                                 |  44|}                                                                                 |
|  51|                                                                                  |  45|                                                                                  |
|  52|sub inc {                                                                         |  46|sub inc {                                                                         |
|  53|    my ($self) = @_;                                                              |  47|    my ($self) = @_;                                                              |
|  54|    $self->count( $self->count + 1 );                                             |  48|    $self->count( $self->count + 1 );                                             |
|  55|    return;                                                                       |  49|    return;                                                                       |
|  56|}                                                                                 |  50|}                                                                                 |
|  57|                                                                                  |  51|                                                                                  |
|  58|sub log_to_db {                                                                   |  52|sub log_to_db {                                                                   |
*  59|    my ( $self, $msg, $cb ) = @_;                                                 *  53|    my ( $self, $msg ) = @_;                                                      *
*  60|    $self->call_internal_api( "log_to_db", $msg, $cb );                           *  54|    return $self->call_internal_api( "log_to_db", $msg );                         *
*  61|    return;                                                                       *    |                                                                                  |
|  62|}                                                                                 |  55|}                                                                                 |
|  63|                                                                                  |  56|                                                                                  |
|  64|sub get_object_name {                                                             |  57|sub get_object_name {                                                             |
*  65|    my ( $self, $id, $cb ) = @_;                                                  *  58|    my ( $self, $id ) = @_;                                                       *
*  66|    $self->call_external_api( "get_object_name", "name $id", $cb );               *  59|    return $self->call_external_api( "get_object_name", "name $id" );             *
*  67|    return;                                                                       *    |                                                                                  |
|  68|}                                                                                 |  60|}                                                                                 |
|  69|                                                                                  |  61|                                                                                  |
|  70|sub delete_object {                                                               |  62|sub delete_object {                                                               |
*  71|    my ( $self, $cb_succ, $cb_fail, $name ) = @_;                                 *  63|    my ( $self, $name ) = @_;                                                     *
*  72|    $self->call_external_api( "delete_object", $name, $cb_succ, $cb_fail );       *  64|    return $self->call_external_api( "delete_object", $name );                    *
*  73|    return;                                                                       *    |                                                                                  |
|  74|}                                                                                 |  65|}                                                                                 |
|  75|                                                                                  |  66|                                                                                  |
*  76|sub finalize {                                                                    *  67|async sub finalize {                                                              *
*  77|    my ( $self, $end_cb ) = @_;                                                   *  68|    my ($self) = @_;                                                              *
*  78|    $self->log_to_db(                                                             *  69|    await $self->log_to_db("done");                                               *
*  79|        "done",                                                                   *  70|    say "end";                                                                    *
*  80|        sub {                                                                     *  71|    $self->inc;                                                                   *
*  81|            say "end";                                                            *    |                                                                                  |
*  82|            $end_cb->();                                                          *    |                                                                                  |
*  83|            $self->inc;                                                           *    |                                                                                  |
*  84|            return;                                                               *    |                                                                                  |
*  85|        }                                                                         *    |                                                                                  |
*  86|    );                                                                            *    |                                                                                  |
|  87|    return;                                                                       |  72|    return;                                                                       |
|  88|}                                                                                 |  73|}                                                                                 |
|  89|                                                                                  |  74|                                                                                  |
|  90|sub call_external_api {                                                           |  75|sub call_external_api {                                                           |
*  91|    my ( $self, $call, $arg, $cb_succ, $cb_fail ) = @_;                           *  76|    my ( $self, $call, $arg ) = @_;                                               *
|  92|    say "$call, $arg";                                                            |  77|    say "$call, $arg";                                                            |
*  93|    my $cb;                                                                       *  78|    my $meth;                                                                     *
|  94|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |  79|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |
*  95|        $cb = $cb_fail;                                                           *  80|        $meth = "fail";                                                           *
|  96|    }                                                                             |  81|    }                                                                             |
|  97|    else {                                                                        |  82|    else {                                                                        |
*  98|        $cb = $cb_succ;                                                           *  83|        $meth = "done";                                                           *
|  99|    }                                                                             |  84|    }                                                                             |
* 100|    $self->delay(                                                                 *  85|    return $self->delay( $meth => $arg );                                         *
* 101|        sub {                                                                     *    |                                                                                  |
* 102|            $cb->($arg);                                                          *    |                                                                                  |
* 103|            return;                                                               *    |                                                                                  |
* 104|        }                                                                         *    |                                                                                  |
* 105|    );                                                                            *    |                                                                                  |
* 106|    return;                                                                       *    |                                                                                  |
| 107|}                                                                                 |  86|}                                                                                 |
| 108|                                                                                  |  87|                                                                                  |
| 109|sub call_internal_api {                                                           |  88|sub call_internal_api {                                                           |
* 110|    my ( $self, $call, $arg, $cb ) = @_;                                          *  89|    my ( $self, $call, $arg ) = @_;                                               *
| 111|    say "$call, $arg";                                                            |  90|    say "$call, $arg";                                                            |
* 112|    $self->delay(                                                                 *  91|    return $self->delay("done");                                                  *
* 113|        sub {                                                                     *    |                                                                                  |
* 114|            $cb->();                                                              *    |                                                                                  |
* 115|            return;                                                               *    |                                                                                  |
* 116|        }                                                                         *    |                                                                                  |
* 117|    );                                                                            *    |                                                                                  |
* 118|    return;                                                                       *    |                                                                                  |
| 119|}                                                                                 |  92|}                                                                                 |
| 120|                                                                                  |  93|                                                                                  |
| 121|sub delay {                                                                       |  94|sub delay {                                                                       |
* 122|    my ( $self, $cb ) = @_;                                                       *  95|    my ( $self, $meth, @args ) = @_;                                              *
|    |                                                                                  *  96|    my $future = AnyEvent::Future->new;                                           *
|    |                                                                                  *  97|    my $cb     = sub { $future->$meth(@args) };                                   *
| 123|    _timer( after => 0.4, cb => $cb );                                            |  98|    _timer( after => 0.4, cb => $cb );                                            |
* 124|    return;                                                                       *  99|    return $future;                                                               *
| 125|}                                                                                 | 100|}                                                                                 |
| 126|                                                                                  | 101|                                                                                  |
| 127|sub _timer {                                                                      | 102|sub _timer {                                                                      |
| 128|    my $cb = pop;                                                                 | 103|    my $cb = pop;                                                                 |
| 129|    my $w;                                                                        | 104|    my $w;                                                                        |
| 130|    $w = AnyEvent->timer(                                                         | 105|    $w = AnyEvent->timer(                                                         |
| 131|        @_ => sub {                                                               | 106|        @_ => sub {                                                               |
| 132|            undef $w;                                                             | 107|            undef $w;                                                             |
| 133|            $cb->();                                                              | 108|            $cb->();                                                              |
| 134|            return;                                                               | 109|            return;                                                               |
| 135|        }                                                                         | 110|        }                                                                         |
| 136|    );                                                                            | 111|    );                                                                            |
| 137|    return;                                                                       | 112|    return;                                                                       |
| 138|}                                                                                 | 113|}                                                                                 |
+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
