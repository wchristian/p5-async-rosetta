+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
|   0|use 5.010;                                                                        |   0|use 5.010;                                                                        |
|   1|use strictures;                                                                   |   1|use strictures;                                                                   |
|   2|                                                                                  |   2|                                                                                  |
|   3|use Moo;                                                                          |   3|use Moo;                                                                          |
|   4|                                                                                  |   4|                                                                                  |
|   5|use Test::More;                                                                   |   5|use Test::More;                                                                   |
|   6|use AnyEvent;                                                                     |   6|use AnyEvent;                                                                     |
|    |                                                                                  *   7|use curry;                                                                        *
|    |                                                                                  *   8|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *
|    |                                                                                  *   9|use AnyEvent::Future;                                                             *
|    |                                                                                  *  10|use Future::AsyncAwait;                                                           *
|   7|                                                                                  |  11|                                                                                  |
|   8|has count => is => rw => default => 0;                                            |  12|has count => is => rw => default => 0;                                            |
*   9|has cv    => is => "rw";                                                          *    |                                                                                  |
|  10|                                                                                  |  13|                                                                                  |
*  11|__PACKAGE__->new->run;                                                            *  14|await __PACKAGE__->new->run;                                                      *
|  12|                                                                                  |  15|                                                                                  |
*  13|sub run {                                                                         *  16|async sub run {                                                                   *
|  14|    my ($self) = @_;                                                              |  17|    my ($self) = @_;                                                              |
|  15|                                                                                  |  18|                                                                                  |
|  16|    $|++;                                                                         |  19|    $|++;                                                                         |
|  17|                                                                                  |  20|                                                                                  |
|  18|    my $w = AnyEvent->timer    #                                                  |  21|    my $w = AnyEvent->timer    #                                                  |
|  19|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  |  22|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  |
|  20|                                                                                  |  23|                                                                                  |
*  21|    $self->cv( AnyEvent->condvar );                                               *  24|    await $self->do(1);                                                           *
*  22|    $self->do( 1, sub { $self->cv->send } );                                      *    |                                                                                  |
*  23|    $self->cv->recv;                                                              *    |                                                                                  |
|  24|                                                                                  |  25|                                                                                  |
*  25|    $self->cv( AnyEvent->condvar );                                               *  26|    await $self->do(2);                                                           *
*  26|    $self->do( 2, sub { $self->cv->send } );                                      *    |                                                                                  |
*  27|    $self->cv->recv;                                                              *    |                                                                                  |
|  28|                                                                                  |  27|                                                                                  |
|  29|    is $self->count, $_, "had $_ events tracked" for 42;                          |  28|    is $self->count, $_, "had $_ events tracked" for 42;                          |
|  30|    done_testing;                                                                 |  29|    done_testing;                                                                 |
|  31|    return;                                                                       |  30|    return;                                                                       |
|  32|}                                                                                 |  31|}                                                                                 |
|  33|                                                                                  |  32|                                                                                  |
*  34|sub do {                                                                          *  33|async sub do {                                                                    *
*  35|    my ( $self, $id, $end_cb ) = @_;                                              *  34|    my ( $self, $id ) = @_;                                                       *
*  36|    my $new_end_cb = sub {                                                        *  35|    await $self->log_to_db("start");                                              *
*  37|        $self->finalize($end_cb);                                                 *  36|    my $name = await $self->get_object_name($id);                                 *
*  38|        return;                                                                   *  37|    eval {                                                                        *
|    |                                                                                  *  38|        await $self->delete_object($name);                                        *
|    |                                                                                  *  39|        await $self->log_to_db("success");                                        *
|  39|    };                                                                            |  40|    };                                                                            |
*  40|    $self->log_to_db(                                                             *  41|    await $self->log_to_db("failure") if $@;                                      *
*  41|        "start",                                                                  *  42|    await $self->finalize;                                                        *
*  42|        sub {                                                                     *    |                                                                                  |
*  43|            $self->get_object_name(                                               *    |                                                                                  |
*  44|                $id,                                                              *    |                                                                                  |
*  45|                sub {                                                             *    |                                                                                  |
*  46|                    my ($name) = @_;                                              *    |                                                                                  |
*  47|\n                                                                                *    |                                                                                  |
*  48|                    $self->delete_object(                                         *    |                                                                                  |
*  49|                        $name,                                                    *    |                                                                                  |
*  50|                        sub {                                                     *    |                                                                                  |
*  51|                            $self->log_to_db( "success" => $new_end_cb );         *    |                                                                                  |
*  52|                            return;                                               *    |                                                                                  |
*  53|                        },                                                        *    |                                                                                  |
*  54|                        sub {                                                     *    |                                                                                  |
*  55|                            $self->log_to_db( "failure" => $new_end_cb );         *    |                                                                                  |
*  56|                            return;                                               *    |                                                                                  |
*  57|                        },                                                        *    |                                                                                  |
*  58|                    );                                                            *    |                                                                                  |
*  59|                    return;                                                       *    |                                                                                  |
*  60|                }                                                                 *    |                                                                                  |
*  61|            );                                                                    *    |                                                                                  |
*  62|            return;                                                               *    |                                                                                  |
*  63|        }                                                                         *    |                                                                                  |
*  64|    );                                                                            *    |                                                                                  |
|  65|    return;                                                                       |  43|    return;                                                                       |
|  66|}                                                                                 |  44|}                                                                                 |
|  67|                                                                                  |  45|                                                                                  |
|  68|sub inc {                                                                         |  46|sub inc {                                                                         |
|  69|    my ($self) = @_;                                                              |  47|    my ($self) = @_;                                                              |
|  70|    $self->count( $self->count + 1 );                                             |  48|    $self->count( $self->count + 1 );                                             |
|  71|    return;                                                                       |  49|    return;                                                                       |
|  72|}                                                                                 |  50|}                                                                                 |
|  73|                                                                                  |  51|                                                                                  |
|  74|sub log_to_db {                                                                   |  52|sub log_to_db {                                                                   |
*  75|    my ( $self, $msg, $cb ) = @_;                                                 *  53|    my ( $self, $msg ) = @_;                                                      *
*  76|    $self->call_internal_api( "log_to_db", $msg, $cb );                           *  54|    return $self->call_internal_api( "log_to_db", $msg );                         *
*  77|    return;                                                                       *    |                                                                                  |
|  78|}                                                                                 |  55|}                                                                                 |
|  79|                                                                                  |  56|                                                                                  |
|  80|sub get_object_name {                                                             |  57|sub get_object_name {                                                             |
*  81|    my ( $self, $id, $cb ) = @_;                                                  *  58|    my ( $self, $id ) = @_;                                                       *
*  82|    $self->call_external_api( "get_object_name", "name $id", $cb );               *  59|    return $self->call_external_api( "get_object_name", "name $id" );             *
*  83|    return;                                                                       *    |                                                                                  |
|  84|}                                                                                 |  60|}                                                                                 |
|  85|                                                                                  |  61|                                                                                  |
|  86|sub delete_object {                                                               |  62|sub delete_object {                                                               |
*  87|    my ( $self, $name, $cb_succ, $cb_fail ) = @_;                                 *  63|    my ( $self, $name ) = @_;                                                     *
*  88|    $self->call_external_api( "delete_object", $name, $cb_succ, $cb_fail );       *  64|    return $self->call_external_api( "delete_object", $name );                    *
*  89|    return;                                                                       *    |                                                                                  |
|  90|}                                                                                 |  65|}                                                                                 |
|  91|                                                                                  |  66|                                                                                  |
*  92|sub finalize {                                                                    *  67|async sub finalize {                                                              *
*  93|    my ( $self, $end_cb ) = @_;                                                   *  68|    my ($self) = @_;                                                              *
*  94|    $self->log_to_db(                                                             *  69|    await $self->log_to_db("done");                                               *
*  95|        "done",                                                                   *  70|    say "end";                                                                    *
*  96|        sub {                                                                     *  71|    $self->inc;                                                                   *
*  97|            say "end";                                                            *    |                                                                                  |
*  98|            $end_cb->();                                                          *    |                                                                                  |
*  99|            $self->inc;                                                           *    |                                                                                  |
* 100|            return;                                                               *    |                                                                                  |
* 101|        }                                                                         *    |                                                                                  |
* 102|    );                                                                            *    |                                                                                  |
| 103|    return;                                                                       |  72|    return;                                                                       |
| 104|}                                                                                 |  73|}                                                                                 |
| 105|                                                                                  |  74|                                                                                  |
| 106|sub call_external_api {                                                           |  75|sub call_external_api {                                                           |
* 107|    my ( $self, $call, $arg, $cb_succ, $cb_fail ) = @_;                           *  76|    my ( $self, $call, $arg ) = @_;                                               *
| 108|    say "$call, $arg";                                                            |  77|    say "$call, $arg";                                                            |
|    |                                                                                  *  78|    my $future = AnyEvent::Future->new;                                           *
| 109|    my $cb;                                                                       |  79|    my $cb;                                                                       |
| 110|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |  80|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |
* 111|        $cb = $cb_fail;                                                           *  81|        $cb = $future->curry::fail($arg);                                         *
| 112|    }                                                                             |  82|    }                                                                             |
| 113|    else {                                                                        |  83|    else {                                                                        |
* 114|        $cb = $cb_succ;                                                           *  84|        $cb = $future->curry::done($arg);                                         *
| 115|    }                                                                             |  85|    }                                                                             |
* 116|    $self->delay(                                                                 *  86|    $self->delay($cb);                                                            *
* 117|        sub {                                                                     *  87|    return $future;                                                               *
* 118|            $cb->($arg);                                                          *    |                                                                                  |
* 119|            return;                                                               *    |                                                                                  |
* 120|        }                                                                         *    |                                                                                  |
* 121|    );                                                                            *    |                                                                                  |
* 122|    return;                                                                       *    |                                                                                  |
| 123|}                                                                                 |  88|}                                                                                 |
| 124|                                                                                  |  89|                                                                                  |
| 125|sub call_internal_api {                                                           |  90|sub call_internal_api {                                                           |
* 126|    my ( $self, $call, $arg, $cb ) = @_;                                          *  91|    my ( $self, $call, $arg ) = @_;                                               *
| 127|    say "$call, $arg";                                                            |  92|    say "$call, $arg";                                                            |
* 128|    $self->delay(                                                                 *  93|    my $future = AnyEvent::Future->new;                                           *
* 129|        sub {                                                                     *  94|    $self->delay( $future->curry::done );                                         *
* 130|            $cb->();                                                              *  95|    return $future;                                                               *
* 131|            return;                                                               *    |                                                                                  |
* 132|        }                                                                         *    |                                                                                  |
* 133|    );                                                                            *    |                                                                                  |
* 134|    return;                                                                       *    |                                                                                  |
| 135|}                                                                                 |  96|}                                                                                 |
| 136|                                                                                  |  97|                                                                                  |
| 137|sub delay {                                                                       |  98|sub delay {                                                                       |
| 138|    my ( $self, $cb ) = @_;                                                       |  99|    my ( $self, $cb ) = @_;                                                       |
| 139|    _timer( after => 0.4, cb => $cb );                                            | 100|    _timer( after => 0.4, cb => $cb );                                            |
| 140|    return;                                                                       | 101|    return;                                                                       |
| 141|}                                                                                 | 102|}                                                                                 |
| 142|                                                                                  | 103|                                                                                  |
| 143|sub _timer {                                                                      | 104|sub _timer {                                                                      |
| 144|    my $cb = pop;                                                                 | 105|    my $cb = pop;                                                                 |
| 145|    my $w;                                                                        | 106|    my $w;                                                                        |
| 146|    $w = AnyEvent->timer(                                                         | 107|    $w = AnyEvent->timer(                                                         |
| 147|        @_ => sub {                                                               | 108|        @_ => sub {                                                               |
| 148|            undef $w;                                                             | 109|            undef $w;                                                             |
| 149|            $cb->();                                                              | 110|            $cb->();                                                              |
| 150|            return;                                                               | 111|            return;                                                               |
| 151|        }                                                                         | 112|        }                                                                         |
| 152|    );                                                                            | 113|    );                                                                            |
| 153|    return;                                                                       | 114|    return;                                                                       |
| 154|}                                                                                 | 115|}                                                                                 |
+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
