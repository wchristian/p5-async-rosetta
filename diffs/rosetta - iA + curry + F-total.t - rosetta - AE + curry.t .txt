+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
|   0|use 5.010;                                                                        |   0|use 5.010;                                                                        |
|   1|use strictures;                                                                   |   1|use strictures;                                                                   |
|   2|                                                                                  |   2|                                                                                  |
|   3|use Moo;                                                                          |   3|use Moo;                                                                          |
|   4|                                                                                  |   4|                                                                                  |
|   5|use Test::More;                                                                   |   5|use Test::More;                                                                   |
*   6|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *   6|use AnyEvent;                                                                     *
*   7|use IO::Async::Timer::Periodic;                                                   *    |                                                                                  |
*   8|use IO::Async::Loop;                                                              *    |                                                                                  |
|   9|use curry;                                                                        |   7|use curry;                                                                        |
|  10|                                                                                  |   8|                                                                                  |
|  11|has count => is => rw => default => 0;                                            |   9|has count => is => rw => default => 0;                                            |
*  12|has loop  => is => ro => default => IO::Async::Loop->curry::new;                  *  10|has cv    => is => "rw";                                                          *
|  13|                                                                                  |  11|                                                                                  |
|  14|__PACKAGE__->new->run;                                                            |  12|__PACKAGE__->new->run;                                                            |
|  15|                                                                                  |  13|                                                                                  |
|  16|sub run {                                                                         |  14|sub run {                                                                         |
|  17|    my ($self) = @_;                                                              |  15|    my ($self) = @_;                                                              |
|  18|                                                                                  |  16|                                                                                  |
|  19|    $|++;                                                                         |  17|    $|++;                                                                         |
|  20|                                                                                  |  18|                                                                                  |
*  21|    $self->loop->add($_) for IO::Async::Timer::Periodic    #                      *  19|    my $w = AnyEvent->timer    #                                                  *
*  22|      ->new( interval => 0.1, on_tick => sub { print "."; $self->inc } )->start;  *  20|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  *
|  23|                                                                                  |  21|                                                                                  |
*  24|    $self->do(1)->get;                                                            *  22|    $self->cv( AnyEvent->condvar );                                               *
|    |                                                                                  *  23|    $self->do( 1, $self->cv->curry::send );                                       *
|    |                                                                                  *  24|    $self->cv->recv;                                                              *
|  25|                                                                                  |  25|                                                                                  |
*  26|    $self->do(2)->get;                                                            *  26|    $self->cv( AnyEvent->condvar );                                               *
|    |                                                                                  *  27|    $self->do( 2, $self->cv->curry::send );                                       *
|    |                                                                                  *  28|    $self->cv->recv;                                                              *
|  27|                                                                                  |  29|                                                                                  |
|  28|    is $self->count, $_, "had $_ events tracked" for 42;                          |  30|    is $self->count, $_, "had $_ events tracked" for 42;                          |
|  29|    done_testing;                                                                 |  31|    done_testing;                                                                 |
|  30|    return;                                                                       |  32|    return;                                                                       |
|  31|}                                                                                 |  33|}                                                                                 |
|  32|                                                                                  |  34|                                                                                  |
|  33|sub do {                                                                          |  35|sub do {                                                                          |
*  34|    my ( $self, $id ) = @_;                                                       *  36|    my ( $self, $id, $end_cb ) = @_;                                              *
*  35|    return $self->log_to_db("start")    #                                         *  37|    $self->log_to_db(                                                             *
*  36|      ->then( $self->curry::get_object_name($id) )                                *  38|        "start",                                                                  *
*  37|      ->then( $self->curry::delete_object )    #                                  *  39|        $self->curry::get_object_name(                                            *
*  38|      ->then(                                                                     *  40|            $id,                                                                  *
*  39|        $self->curry::log_to_db("success"),                                       *  41|            $self->curry::delete_object(                                          *
*  40|        $self->curry::log_to_db("failure"),                                       *  42|                $self->curry::log_to_db    #                                      *
*  41|      )                                        #                                  *  43|                  ( "success" => $self->curry::finalize($end_cb) ),               *
*  42|      ->then( $self->curry::finalize );                                           *  44|                $self->curry::log_to_db    #                                      *
|    |                                                                                  *  45|                  ( "failure" => $self->curry::finalize($end_cb) ),               *
|    |                                                                                  *  46|            )                                                                     *
|    |                                                                                  *  47|        )                                                                         *
|    |                                                                                  *  48|    );                                                                            *
|    |                                                                                  *  49|    return;                                                                       *
|  43|}                                                                                 |  50|}                                                                                 |
|  44|                                                                                  |  51|                                                                                  |
|  45|sub inc {                                                                         |  52|sub inc {                                                                         |
|  46|    my ($self) = @_;                                                              |  53|    my ($self) = @_;                                                              |
|  47|    $self->count( $self->count + 1 );                                             |  54|    $self->count( $self->count + 1 );                                             |
|  48|    return;                                                                       |  55|    return;                                                                       |
|  49|}                                                                                 |  56|}                                                                                 |
|  50|                                                                                  |  57|                                                                                  |
|  51|sub log_to_db {                                                                   |  58|sub log_to_db {                                                                   |
*  52|    my ( $self, $msg ) = @_;                                                      *  59|    my ( $self, $msg, $cb ) = @_;                                                 *
*  53|    return $self->call_internal_api( "log_to_db", $msg );                         *  60|    $self->call_internal_api( "log_to_db", $msg, $cb );                           *
|    |                                                                                  *  61|    return;                                                                       *
|  54|}                                                                                 |  62|}                                                                                 |
|  55|                                                                                  |  63|                                                                                  |
|  56|sub get_object_name {                                                             |  64|sub get_object_name {                                                             |
*  57|    my ( $self, $id ) = @_;                                                       *  65|    my ( $self, $id, $cb ) = @_;                                                  *
*  58|    return $self->call_external_api( "get_object_name", "name $id" );             *  66|    $self->call_external_api( "get_object_name", "name $id", $cb );               *
|    |                                                                                  *  67|    return;                                                                       *
|  59|}                                                                                 |  68|}                                                                                 |
|  60|                                                                                  |  69|                                                                                  |
|  61|sub delete_object {                                                               |  70|sub delete_object {                                                               |
*  62|    my ( $self, $name ) = @_;                                                     *  71|    my ( $self, $cb_succ, $cb_fail, $name ) = @_;                                 *
*  63|    return $self->call_external_api( "delete_object", $name );                    *  72|    $self->call_external_api( "delete_object", $name, $cb_succ, $cb_fail );       *
|    |                                                                                  *  73|    return;                                                                       *
|  64|}                                                                                 |  74|}                                                                                 |
|  65|                                                                                  |  75|                                                                                  |
|  66|sub finalize {                                                                    |  76|sub finalize {                                                                    |
*  67|    my ($self) = @_;                                                              *  77|    my ( $self, $end_cb ) = @_;                                                   *
*  68|    return $self->log_to_db("done")    #                                          *  78|    $self->log_to_db(                                                             *
*  69|      ->then(                                                                     *  79|        "done",                                                                   *
|  70|        sub {                                                                     |  80|        sub {                                                                     |
|  71|            say "end";                                                            |  81|            say "end";                                                            |
|    |                                                                                  *  82|            $end_cb->();                                                          *
|  72|            $self->inc;                                                           |  83|            $self->inc;                                                           |
*  73|            return Future->done;                                                  *  84|            return;                                                               *
|  74|        }                                                                         |  85|        }                                                                         |
*  75|      );                                                                          *  86|    );                                                                            *
|    |                                                                                  *  87|    return;                                                                       *
|  76|}                                                                                 |  88|}                                                                                 |
|  77|                                                                                  |  89|                                                                                  |
|  78|sub call_external_api {                                                           |  90|sub call_external_api {                                                           |
*  79|    my ( $self, $call, $arg ) = @_;                                               *  91|    my ( $self, $call, $arg, $cb_succ, $cb_fail ) = @_;                           *
|  80|    say "$call, $arg";                                                            |  92|    say "$call, $arg";                                                            |
*  81|    my $future = $self->loop->new_future;                                         *    |                                                                                  |
|  82|    my $cb;                                                                       |  93|    my $cb;                                                                       |
|  83|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |  94|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |
*  84|        $cb = $future->curry::fail($arg);                                         *  95|        $cb = $cb_fail;                                                           *
|  85|    }                                                                             |  96|    }                                                                             |
|  86|    else {                                                                        |  97|    else {                                                                        |
*  87|        $cb = $future->curry::done($arg);                                         *  98|        $cb = $cb_succ;                                                           *
|  88|    }                                                                             |  99|    }                                                                             |
*  89|    $self->delay($cb);                                                            * 100|    $self->delay(                                                                 *
*  90|    return $future;                                                               * 101|        sub {                                                                     *
|    |                                                                                  * 102|            $cb->($arg);                                                          *
|    |                                                                                  * 103|            return;                                                               *
|    |                                                                                  * 104|        }                                                                         *
|    |                                                                                  * 105|    );                                                                            *
|    |                                                                                  * 106|    return;                                                                       *
|  91|}                                                                                 | 107|}                                                                                 |
|  92|                                                                                  | 108|                                                                                  |
|  93|sub call_internal_api {                                                           | 109|sub call_internal_api {                                                           |
*  94|    my ( $self, $call, $arg ) = @_;                                               * 110|    my ( $self, $call, $arg, $cb ) = @_;                                          *
|  95|    say "$call, $arg";                                                            | 111|    say "$call, $arg";                                                            |
*  96|    my $future = $self->loop->new_future;                                         * 112|    $self->delay(                                                                 *
*  97|    $self->delay( $future->curry::done );                                         * 113|        sub {                                                                     *
*  98|    return $future;                                                               * 114|            $cb->();                                                              *
|    |                                                                                  * 115|            return;                                                               *
|    |                                                                                  * 116|        }                                                                         *
|    |                                                                                  * 117|    );                                                                            *
|    |                                                                                  * 118|    return;                                                                       *
|  99|}                                                                                 | 119|}                                                                                 |
| 100|                                                                                  | 120|                                                                                  |
| 101|sub delay {                                                                       | 121|sub delay {                                                                       |
| 102|    my ( $self, $cb ) = @_;                                                       | 122|    my ( $self, $cb ) = @_;                                                       |
* 103|    $self->loop->watch_time( after => 0.4, code => $cb );                         * 123|    _timer( after => 0.4, cb => $cb );                                            *
|    |                                                                                  * 124|    return;                                                                       *
|    |                                                                                  * 125|}                                                                                 *
|    |                                                                                  * 126|\r\n                                                                              *
|    |                                                                                  * 127|sub _timer {                                                                      *
|    |                                                                                  * 128|    my $cb = pop;                                                                 *
|    |                                                                                  * 129|    my $w;                                                                        *
|    |                                                                                  * 130|    $w = AnyEvent->timer(                                                         *
|    |                                                                                  * 131|        @_ => sub {                                                               *
|    |                                                                                  * 132|            undef $w;                                                             *
|    |                                                                                  * 133|            $cb->();                                                              *
|    |                                                                                  * 134|            return;                                                               *
|    |                                                                                  * 135|        }                                                                         *
|    |                                                                                  * 136|    );                                                                            *
| 104|    return;                                                                       | 137|    return;                                                                       |
| 105|}                                                                                 | 138|}                                                                                 |
+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
