+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
|   0|use 5.010;                                                                        |   0|use 5.010;                                                                        |
|   1|use strictures;                                                                   |   1|use strictures;                                                                   |
|   2|                                                                                  |   2|                                                                                  |
|   3|use Moo;                                                                          |   3|use Moo;                                                                          |
|   4|                                                                                  |   4|                                                                                  |
|   5|use Test::More;                                                                   |   5|use Test::More;                                                                   |
*   6|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *   6|use AnyEvent;                                                                     *
*   7|use IO::Async::Timer::Periodic;                                                   *    |                                                                                  |
*   8|use IO::Async::Loop;                                                              *    |                                                                                  |
|   9|use curry;                                                                        |   7|use curry;                                                                        |
|    |                                                                                  *   8|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *
|    |                                                                                  *   9|use AnyEvent::Future;                                                             *
|  10|                                                                                  |  10|                                                                                  |
|  11|has count => is => rw => default => 0;                                            |  11|has count => is => rw => default => 0;                                            |
*  12|has loop  => is => ro => default => IO::Async::Loop->curry::new;                  *    |                                                                                  |
|  13|                                                                                  |  12|                                                                                  |
|  14|__PACKAGE__->new->run;                                                            |  13|__PACKAGE__->new->run;                                                            |
|  15|                                                                                  |  14|                                                                                  |
|  16|sub run {                                                                         |  15|sub run {                                                                         |
|  17|    my ($self) = @_;                                                              |  16|    my ($self) = @_;                                                              |
|  18|                                                                                  |  17|                                                                                  |
|  19|    $|++;                                                                         |  18|    $|++;                                                                         |
|  20|                                                                                  |  19|                                                                                  |
*  21|    $self->loop->add($_) for IO::Async::Timer::Periodic    #                      *  20|    my $w = AnyEvent->timer    #                                                  *
*  22|      ->new( interval => 0.1, on_tick => sub { print "."; $self->inc } )->start;  *  21|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  *
|  23|                                                                                  |  22|                                                                                  |
|  24|    $self->do(1)->get;                                                            |  23|    $self->do(1)->get;                                                            |
|  25|                                                                                  |  24|                                                                                  |
|  26|    $self->do(2)->get;                                                            |  25|    $self->do(2)->get;                                                            |
|  27|                                                                                  |  26|                                                                                  |
|  28|    is $self->count, $_, "had $_ events tracked" for 42;                          |  27|    is $self->count, $_, "had $_ events tracked" for 42;                          |
|  29|    done_testing;                                                                 |  28|    done_testing;                                                                 |
|  30|    return;                                                                       |  29|    return;                                                                       |
|  31|}                                                                                 |  30|}                                                                                 |
|  32|                                                                                  |  31|                                                                                  |
|  33|sub do {                                                                          |  32|sub do {                                                                          |
|  34|    my ( $self, $id ) = @_;                                                       |  33|    my ( $self, $id ) = @_;                                                       |
|  35|    return $self->log_to_db("start")    #                                         |  34|    return $self->log_to_db("start")    #                                         |
|  36|      ->then( $self->curry::get_object_name($id) )                                |  35|      ->then( $self->curry::get_object_name($id) )                                |
|  37|      ->then( $self->curry::delete_object )    #                                  |  36|      ->then( $self->curry::delete_object )    #                                  |
|  38|      ->then(                                                                     |  37|      ->then(                                                                     |
|  39|        $self->curry::log_to_db("success"),                                       |  38|        $self->curry::log_to_db("success"),                                       |
|  40|        $self->curry::log_to_db("failure"),                                       |  39|        $self->curry::log_to_db("failure"),                                       |
|  41|      )                                        #                                  |  40|      )                                        #                                  |
|  42|      ->then( $self->curry::finalize );                                           |  41|      ->then( $self->curry::finalize );                                           |
|  43|}                                                                                 |  42|}                                                                                 |
|  44|                                                                                  |  43|                                                                                  |
|  45|sub inc {                                                                         |  44|sub inc {                                                                         |
|  46|    my ($self) = @_;                                                              |  45|    my ($self) = @_;                                                              |
|  47|    $self->count( $self->count + 1 );                                             |  46|    $self->count( $self->count + 1 );                                             |
|  48|    return;                                                                       |  47|    return;                                                                       |
|  49|}                                                                                 |  48|}                                                                                 |
|  50|                                                                                  |  49|                                                                                  |
|  51|sub log_to_db {                                                                   |  50|sub log_to_db {                                                                   |
|  52|    my ( $self, $msg ) = @_;                                                      |  51|    my ( $self, $msg ) = @_;                                                      |
|  53|    return $self->call_internal_api( "log_to_db", $msg );                         |  52|    return $self->call_internal_api( "log_to_db", $msg );                         |
|  54|}                                                                                 |  53|}                                                                                 |
|  55|                                                                                  |  54|                                                                                  |
|  56|sub get_object_name {                                                             |  55|sub get_object_name {                                                             |
|  57|    my ( $self, $id ) = @_;                                                       |  56|    my ( $self, $id ) = @_;                                                       |
|  58|    return $self->call_external_api( "get_object_name", "name $id" );             |  57|    return $self->call_external_api( "get_object_name", "name $id" );             |
|  59|}                                                                                 |  58|}                                                                                 |
|  60|                                                                                  |  59|                                                                                  |
|  61|sub delete_object {                                                               |  60|sub delete_object {                                                               |
|  62|    my ( $self, $name ) = @_;                                                     |  61|    my ( $self, $name ) = @_;                                                     |
|  63|    return $self->call_external_api( "delete_object", $name );                    |  62|    return $self->call_external_api( "delete_object", $name );                    |
|  64|}                                                                                 |  63|}                                                                                 |
|  65|                                                                                  |  64|                                                                                  |
|  66|sub finalize {                                                                    |  65|sub finalize {                                                                    |
|  67|    my ($self) = @_;                                                              |  66|    my ($self) = @_;                                                              |
|  68|    return $self->log_to_db("done")    #                                          |  67|    return $self->log_to_db("done")    #                                          |
|  69|      ->then(                                                                     |  68|      ->then(                                                                     |
|  70|        sub {                                                                     |  69|        sub {                                                                     |
|  71|            say "end";                                                            |  70|            say "end";                                                            |
|  72|            $self->inc;                                                           |  71|            $self->inc;                                                           |
|  73|            return Future->done;                                                  |  72|            return Future->done;                                                  |
|  74|        }                                                                         |  73|        }                                                                         |
|  75|      );                                                                          |  74|      );                                                                          |
|  76|}                                                                                 |  75|}                                                                                 |
|  77|                                                                                  |  76|                                                                                  |
|  78|sub call_external_api {                                                           |  77|sub call_external_api {                                                           |
|  79|    my ( $self, $call, $arg ) = @_;                                               |  78|    my ( $self, $call, $arg ) = @_;                                               |
|  80|    say "$call, $arg";                                                            |  79|    say "$call, $arg";                                                            |
|  81|    my $meth;                                                                     |  80|    my $meth;                                                                     |
|  82|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |  81|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |
|  83|        $meth = "fail";                                                           |  82|        $meth = "fail";                                                           |
|  84|    }                                                                             |  83|    }                                                                             |
|  85|    else {                                                                        |  84|    else {                                                                        |
|  86|        $meth = "done";                                                           |  85|        $meth = "done";                                                           |
|  87|    }                                                                             |  86|    }                                                                             |
|  88|    return $self->delay( $meth => $arg );                                         |  87|    return $self->delay( $meth => $arg );                                         |
|  89|}                                                                                 |  88|}                                                                                 |
|  90|                                                                                  |  89|                                                                                  |
|  91|sub call_internal_api {                                                           |  90|sub call_internal_api {                                                           |
|  92|    my ( $self, $call, $arg ) = @_;                                               |  91|    my ( $self, $call, $arg ) = @_;                                               |
|  93|    say "$call, $arg";                                                            |  92|    say "$call, $arg";                                                            |
|  94|    return $self->delay("done");                                                  |  93|    return $self->delay("done");                                                  |
|  95|}                                                                                 |  94|}                                                                                 |
|  96|                                                                                  |  95|                                                                                  |
|  97|sub delay {                                                                       |  96|sub delay {                                                                       |
|  98|    my ( $self, $meth, @args ) = @_;                                              |  97|    my ( $self, $meth, @args ) = @_;                                              |
*  99|    my $future = $self->loop->new_future;                                         *  98|    my $future = AnyEvent::Future->new;                                           *
| 100|    my $cb     = sub { $future->$meth(@args) };                                   |  99|    my $cb     = sub { $future->$meth(@args) };                                   |
* 101|    $self->loop->watch_time( after => 0.4, code => $cb );                         * 100|    _timer( after => 0.4, cb => $cb );                                            *
| 102|    return $future;                                                               | 101|    return $future;                                                               |
|    |                                                                                  * 102|}                                                                                 *
|    |                                                                                  * 103|\r\n                                                                              *
|    |                                                                                  * 104|sub _timer {                                                                      *
|    |                                                                                  * 105|    my $cb = pop;                                                                 *
|    |                                                                                  * 106|    my $w;                                                                        *
|    |                                                                                  * 107|    $w = AnyEvent->timer(                                                         *
|    |                                                                                  * 108|        @_ => sub {                                                               *
|    |                                                                                  * 109|            undef $w;                                                             *
|    |                                                                                  * 110|            $cb->();                                                              *
|    |                                                                                  * 111|            return;                                                               *
|    |                                                                                  * 112|        }                                                                         *
|    |                                                                                  * 113|    );                                                                            *
|    |                                                                                  * 114|    return;                                                                       *
| 103|}                                                                                 | 115|}                                                                                 |
+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
