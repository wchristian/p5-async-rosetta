+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
|   0|use 5.010;                                                                        |   0|use 5.010;                                                                        |
|   1|use strictures;                                                                   |   1|use strictures;                                                                   |
|   2|                                                                                  |   2|                                                                                  |
|   3|use Moo;                                                                          |   3|use Moo;                                                                          |
|   4|                                                                                  |   4|                                                                                  |
|   5|use Test::More;                                                                   |   5|use Test::More;                                                                   |
*   6|use IO::Async::Timer::Periodic;                                                   *   6|use AnyEvent;                                                                     *
*   7|use IO::Async::Loop;                                                              *   7|use curry;                                                                        *
|    |                                                                                  *   8|BEGIN { $ENV{PERL_FUTURE_STRICT} = 1 }                                            *
|    |                                                                                  *   9|use AnyEvent::Future;                                                             *
|   8|                                                                                  |  10|                                                                                  |
|   9|has count => is => rw => default => 0;                                            |  11|has count => is => rw => default => 0;                                            |
*  10|has loop  => is => ro => default => sub { IO::Async::Loop->new };                 *    |                                                                                  |
|  11|                                                                                  |  12|                                                                                  |
|  12|__PACKAGE__->new->run;                                                            |  13|__PACKAGE__->new->run;                                                            |
|  13|                                                                                  |  14|                                                                                  |
|  14|sub run {                                                                         |  15|sub run {                                                                         |
|  15|    my ($self) = @_;                                                              |  16|    my ($self) = @_;                                                              |
|  16|                                                                                  |  17|                                                                                  |
|  17|    $|++;                                                                         |  18|    $|++;                                                                         |
|  18|                                                                                  |  19|                                                                                  |
*  19|    $self->loop->add($_) for IO::Async::Timer::Periodic    #                      *  20|    my $w = AnyEvent->timer    #                                                  *
*  20|      ->new( interval => 0.1, on_tick => sub { print "."; $self->inc } )->start;  *  21|      ( after => 0.08, interval => 0.101, cb => sub { print "."; $self->inc } );  *
|  21|                                                                                  |  22|                                                                                  |
*  22|    $self->do( 1, sub { $self->loop->stop } );                                    *  23|    $self->do(1)->get;                                                            *
*  23|    $self->loop->run;                                                             *    |                                                                                  |
|  24|                                                                                  |  24|                                                                                  |
*  25|    $self->do( 2, sub { $self->loop->stop } );                                    *  25|    $self->do(2)->get;                                                            *
*  26|    $self->loop->run;                                                             *    |                                                                                  |
|  27|                                                                                  |  26|                                                                                  |
|  28|    is $self->count, $_, "had $_ events tracked" for 42;                          |  27|    is $self->count, $_, "had $_ events tracked" for 42;                          |
|  29|    done_testing;                                                                 |  28|    done_testing;                                                                 |
|  30|    return;                                                                       |  29|    return;                                                                       |
|  31|}                                                                                 |  30|}                                                                                 |
|  32|                                                                                  |  31|                                                                                  |
|  33|sub do {                                                                          |  32|sub do {                                                                          |
*  34|    my ( $self, $id, $end_cb ) = @_;                                              *  33|    my ( $self, $id ) = @_;                                                       *
*  35|    my $new_end_cb = sub {                                                        *  34|    return $self->log_to_db("start")    #                                         *
*  36|        $self->finalize($end_cb);                                                 *  35|      ->then( $self->curry::get_object_name($id) )                                *
*  37|        return;                                                                   *  36|      ->then( $self->curry::delete_object )    #                                  *
*  38|    };                                                                            *  37|      ->then(                                                                     *
*  39|    $self->log_to_db(                                                             *  38|        $self->curry::log_to_db("success"),                                       *
*  40|        "start",                                                                  *  39|        $self->curry::log_to_db("failure"),                                       *
*  41|        sub {                                                                     *  40|      )                                        #                                  *
*  42|            $self->get_object_name(                                               *  41|      ->then( $self->curry::finalize );                                           *
*  43|                $id,                                                              *    |                                                                                  |
*  44|                sub {                                                             *    |                                                                                  |
*  45|                    my ($name) = @_;                                              *    |                                                                                  |
*  46|\n                                                                                *    |                                                                                  |
*  47|                    $self->delete_object(                                         *    |                                                                                  |
*  48|                        $name,                                                    *    |                                                                                  |
*  49|                        sub {                                                     *    |                                                                                  |
*  50|                            $self->log_to_db( "success" => $new_end_cb );         *    |                                                                                  |
*  51|                            return;                                               *    |                                                                                  |
*  52|                        },                                                        *    |                                                                                  |
*  53|                        sub {                                                     *    |                                                                                  |
*  54|                            $self->log_to_db( "failure" => $new_end_cb );         *    |                                                                                  |
*  55|                            return;                                               *    |                                                                                  |
*  56|                        },                                                        *    |                                                                                  |
*  57|                    );                                                            *    |                                                                                  |
*  58|                    return;                                                       *    |                                                                                  |
*  59|                }                                                                 *    |                                                                                  |
*  60|            );                                                                    *    |                                                                                  |
*  61|            return;                                                               *    |                                                                                  |
*  62|        }                                                                         *    |                                                                                  |
*  63|    );                                                                            *    |                                                                                  |
*  64|    return;                                                                       *    |                                                                                  |
|  65|}                                                                                 |  42|}                                                                                 |
|  66|                                                                                  |  43|                                                                                  |
|  67|sub inc {                                                                         |  44|sub inc {                                                                         |
|  68|    my ($self) = @_;                                                              |  45|    my ($self) = @_;                                                              |
|  69|    $self->count( $self->count + 1 );                                             |  46|    $self->count( $self->count + 1 );                                             |
|  70|    return;                                                                       |  47|    return;                                                                       |
|  71|}                                                                                 |  48|}                                                                                 |
|  72|                                                                                  |  49|                                                                                  |
|  73|sub log_to_db {                                                                   |  50|sub log_to_db {                                                                   |
*  74|    my ( $self, $msg, $cb ) = @_;                                                 *  51|    my ( $self, $msg ) = @_;                                                      *
*  75|    $self->call_internal_api( "log_to_db", $msg, $cb );                           *  52|    return $self->call_internal_api( "log_to_db", $msg );                         *
*  76|    return;                                                                       *    |                                                                                  |
|  77|}                                                                                 |  53|}                                                                                 |
|  78|                                                                                  |  54|                                                                                  |
|  79|sub get_object_name {                                                             |  55|sub get_object_name {                                                             |
*  80|    my ( $self, $id, $cb ) = @_;                                                  *  56|    my ( $self, $id ) = @_;                                                       *
*  81|    $self->call_external_api( "get_object_name", "name $id", $cb );               *  57|    return $self->call_external_api( "get_object_name", "name $id" );             *
*  82|    return;                                                                       *    |                                                                                  |
|  83|}                                                                                 |  58|}                                                                                 |
|  84|                                                                                  |  59|                                                                                  |
|  85|sub delete_object {                                                               |  60|sub delete_object {                                                               |
*  86|    my ( $self, $name, $cb_succ, $cb_fail ) = @_;                                 *  61|    my ( $self, $name ) = @_;                                                     *
*  87|    $self->call_external_api( "delete_object", $name, $cb_succ, $cb_fail );       *  62|    return $self->call_external_api( "delete_object", $name );                    *
*  88|    return;                                                                       *    |                                                                                  |
|  89|}                                                                                 |  63|}                                                                                 |
|  90|                                                                                  |  64|                                                                                  |
|  91|sub finalize {                                                                    |  65|sub finalize {                                                                    |
*  92|    my ( $self, $end_cb ) = @_;                                                   *  66|    my ($self) = @_;                                                              *
*  93|    $self->log_to_db(                                                             *  67|    return $self->log_to_db("done")    #                                          *
*  94|        "done",                                                                   *  68|      ->then(                                                                     *
|  95|        sub {                                                                     |  69|        sub {                                                                     |
|  96|            say "end";                                                            |  70|            say "end";                                                            |
*  97|            $end_cb->();                                                          *    |                                                                                  |
|  98|            $self->inc;                                                           |  71|            $self->inc;                                                           |
*  99|            return;                                                               *  72|            return Future->done;                                                  *
| 100|        }                                                                         |  73|        }                                                                         |
* 101|    );                                                                            *  74|      );                                                                          *
* 102|    return;                                                                       *    |                                                                                  |
| 103|}                                                                                 |  75|}                                                                                 |
| 104|                                                                                  |  76|                                                                                  |
| 105|sub call_external_api {                                                           |  77|sub call_external_api {                                                           |
* 106|    my ( $self, $call, $arg, $cb_succ, $cb_fail ) = @_;                           *  78|    my ( $self, $call, $arg ) = @_;                                               *
| 107|    say "$call, $arg";                                                            |  79|    say "$call, $arg";                                                            |
|    |                                                                                  *  80|    my $future = AnyEvent::Future->new;                                           *
| 108|    my $cb;                                                                       |  81|    my $cb;                                                                       |
| 109|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |  82|    if ( $call eq "delete_object" and $arg eq "name 2" ) {                        |
* 110|        $cb = $cb_fail;                                                           *  83|        $cb = $future->curry::fail($arg);                                         *
| 111|    }                                                                             |  84|    }                                                                             |
| 112|    else {                                                                        |  85|    else {                                                                        |
* 113|        $cb = $cb_succ;                                                           *  86|        $cb = $future->curry::done($arg);                                         *
| 114|    }                                                                             |  87|    }                                                                             |
* 115|    $self->delay(                                                                 *  88|    $self->delay($cb);                                                            *
* 116|        sub {                                                                     *  89|    return $future;                                                               *
* 117|            $cb->($arg);                                                          *    |                                                                                  |
* 118|            return;                                                               *    |                                                                                  |
* 119|        }                                                                         *    |                                                                                  |
* 120|    );                                                                            *    |                                                                                  |
* 121|    return;                                                                       *    |                                                                                  |
| 122|}                                                                                 |  90|}                                                                                 |
| 123|                                                                                  |  91|                                                                                  |
| 124|sub call_internal_api {                                                           |  92|sub call_internal_api {                                                           |
* 125|    my ( $self, $call, $arg, $cb ) = @_;                                          *  93|    my ( $self, $call, $arg ) = @_;                                               *
| 126|    say "$call, $arg";                                                            |  94|    say "$call, $arg";                                                            |
* 127|    $self->delay(                                                                 *  95|    my $future = AnyEvent::Future->new;                                           *
* 128|        sub {                                                                     *  96|    $self->delay( $future->curry::done );                                         *
* 129|            $cb->();                                                              *  97|    return $future;                                                               *
* 130|            return;                                                               *    |                                                                                  |
* 131|        }                                                                         *    |                                                                                  |
* 132|    );                                                                            *    |                                                                                  |
* 133|    return;                                                                       *    |                                                                                  |
| 134|}                                                                                 |  98|}                                                                                 |
| 135|                                                                                  |  99|                                                                                  |
| 136|sub delay {                                                                       | 100|sub delay {                                                                       |
| 137|    my ( $self, $cb ) = @_;                                                       | 101|    my ( $self, $cb ) = @_;                                                       |
* 138|    $self->loop->watch_time( after => 0.4, code => $cb );                         * 102|    _timer( after => 0.4, cb => $cb );                                            *
|    |                                                                                  * 103|    return;                                                                       *
|    |                                                                                  * 104|}                                                                                 *
|    |                                                                                  * 105|\n                                                                                *
|    |                                                                                  * 106|sub _timer {                                                                      *
|    |                                                                                  * 107|    my $cb = pop;                                                                 *
|    |                                                                                  * 108|    my $w;                                                                        *
|    |                                                                                  * 109|    $w = AnyEvent->timer(                                                         *
|    |                                                                                  * 110|        @_ => sub {                                                               *
|    |                                                                                  * 111|            undef $w;                                                             *
|    |                                                                                  * 112|            $cb->();                                                              *
|    |                                                                                  * 113|            return;                                                               *
|    |                                                                                  * 114|        }                                                                         *
|    |                                                                                  * 115|    );                                                                            *
| 139|    return;                                                                       | 116|    return;                                                                       |
| 140|}                                                                                 | 117|}                                                                                 |
+----+----------------------------------------------------------------------------------+----+----------------------------------------------------------------------------------+
